pipeline {
    agent any
    tools {
        maven 'maven' // Assure-toi que Maven est configuré dans Jenkins
    }
    stages {
        // Checkout stage
        stage('Checkout Backend') {
            steps {
                // Checkout backend from main
                dir('./laboratory_service') {
                    git branch: 'main', url: 'https://github.com/MounaEttalbi/Laboratory_Management.git'
                }
            }
        }

        stage('Checkout Frontend') {
            steps {
                // Checkout frontend from main
                dir('./Laboratory_Management') {
                    git branch: 'master', url: 'https://github.com/MounaEttalbi/Laboratory_Management.git'
                }
            }
        }

        // Backend Build & Test stage
        stage('Build & Test Backend') {
            steps {
                dir('./laboratory_service') {
                    bat 'mvn clean install' // Utiliser 'sh' si sous Linux
                }
            }
        }

        // Frontend Build & Test stage
        /*stage('Build & Test Frontend') {
            steps {
                dir('./front-end') {
                    // Install npm packages
                    bat 'npm install' // Utiliser 'sh' si sous Linux
                    // Run Angular build
                   bat 'npx --max_old_space_size=8192 npm run build --prod'

                 // Optional: run tests
                    bat 'npm run test -- --watch=false'

                }
            }
        }*/

        // Deploy using Docker Compose
        stage('Deploy with Docker Compose') {
            steps {
                dir('./laboratory_service') { // Changez ici pour accéder au dossier où se trouve docker-compose.yml
                    bat 'docker-compose -f docker-compose.yml up --build -d' // Chemin relatif vers docker-compose.yml
                }
            }
        }

        stage('SonarQube Analysis') {
            environment {
                SONARQUBE_TOKEN = credentials('projet-libre-sonar-token') // Remplacez par votre ID d'identifiant
            }
            steps {
                script {
                    // Change directory to where the pom.xml is located
            dir('./laboratory_service') {
                    // Exécutez l'analyse SonarQube
                    bat "mvn clean verify sonar:sonar \
  -Dsonar.projectKey=sonar-jenkins \
  -Dsonar.projectName='sonar-jenkins' \
  -Dsonar.host.url=http://localhost:9000 \
  -Dsonar.token=$SONARQUBE_TOKEN"
                }}
            }
        }
    }

    post {
        success {
            echo 'Le build, les tests et le déploiement ont réussi !'
        }
        failure {
            echo 'Échec du build, des tests ou du déploiement.'
        }
    }
}
